---
# Create a selfsigned Issuer, in order to create a root CA certificate for
# signing webhook serving certificates
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ include "cert-manager-webhook-volcengine.selfSignedIssuer" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "cert-manager-webhook-volcengine.name" . }}
    chart: {{ include "cert-manager-webhook-volcengine.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  selfSigned: {}

---

# Generate a CA Certificate used to sign certificates for the webhook
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "cert-manager-webhook-volcengine.rootCACertificate" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "cert-manager-webhook-volcengine.name" . }}
    chart: {{ include "cert-manager-webhook-volcengine.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  secretName: {{ include "cert-manager-webhook-volcengine.rootCACertificate" . }}
  duration: 43800h # 5y
  issuerRef:
    name: {{ include "cert-manager-webhook-volcengine.selfSignedIssuer" . }}
  commonName: "ca.cert-manager-webhook-volcengine.cert-manager"
  isCA: true

---

# Create an Issuer that uses the above generated CA certificate to issue certs
apiVersion: cert-manager.io/v1
kind: Issuer
metadata:
  name: {{ include "cert-manager-webhook-volcengine.rootCAIssuer" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "cert-manager-webhook-volcengine.name" . }}
    chart: {{ include "cert-manager-webhook-volcengine.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  ca:
    secretName: {{ include "cert-manager-webhook-volcengine.rootCACertificate" . }}

---

# Finally, generate a serving certificate for the webhook to use
apiVersion: cert-manager.io/v1
kind: Certificate
metadata:
  name: {{ include "cert-manager-webhook-volcengine.servingCertificate" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "cert-manager-webhook-volcengine.name" . }}
    chart: {{ include "cert-manager-webhook-volcengine.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  secretName: {{ include "cert-manager-webhook-volcengine.servingCertificate" . }}
  duration: 8760h # 1y
  issuerRef:
    name: {{ include "cert-manager-webhook-volcengine.rootCAIssuer" . }}
  dnsNames:
  - {{ include "cert-manager-webhook-volcengine.fullname" . }}
  - {{ include "cert-manager-webhook-volcengine.fullname" . }}.{{ .Release.Namespace }}
  - {{ include "cert-manager-webhook-volcengine.fullname" . }}.{{ .Release.Namespace }}.svc
{{- if .Values.clusterIssuer.enabled }}
---

apiVersion: cert-manager.io/v1
kind: ClusterIssuer
metadata:
  name: {{ include "cert-manager-webhook-volcengine.clusterIssuer" . }}
  namespace: {{ .Release.Namespace | quote }}
  labels:
    app: {{ include "cert-manager-webhook-volcengine.name" . }}
    chart: {{ include "cert-manager-webhook-volcengine.chart" . }}
    release: {{ .Release.Name }}
    heritage: {{ .Release.Service }}
spec:
  acme:
{{- if .Values.clusterIssuer.staging }}
    server: https://acme-staging-v02.api.letsencrypt.org/directory
{{- else }}
    server: https://acme-v02.api.letsencrypt.org/directory
{{- end }}
    email: {{ .Values.clusterIssuer.email }}
    privateKeySecretRef:
      name: {{ include "cert-manager-webhook-volcengine.fullname" . }}-letsencrypt
    solvers:
      - dns01:
          webhook:
            groupName: {{ .Values.groupName }}
            solverName: volcengine
            config:
              regionId: {{ .Values.regionId | default "cn-beijing" }}
              ttl: {{ .Values.clusterIssuer.ttl }}
              accessKeySecretRef:
                key: accessKey
                name: {{ include "cert-manager-webhook-volcengine.fullname" . }}-secret
              secretKeySecretRef:
                key: secretKey
                name: {{ include "cert-manager-webhook-volcengine.fullname" . }}-secret
      {{- if .Values.clusterIssuer.selector }}
        selector:
{{ toYaml .Values.clusterIssuer.selector | indent 8 }}
      {{- end }}
{{- end }}

